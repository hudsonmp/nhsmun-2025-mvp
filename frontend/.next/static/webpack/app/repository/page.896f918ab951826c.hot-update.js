"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/repository/page",{

/***/ "(app-pages-browser)/./lib/googleDrive.ts":
/*!****************************!*\
  !*** ./lib/googleDrive.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   downloadDriveFile: function() { return /* binding */ downloadDriveFile; },\n/* harmony export */   getDriveFile: function() { return /* binding */ getDriveFile; },\n/* harmony export */   isGoogleAuthenticated: function() { return /* binding */ isGoogleAuthenticated; },\n/* harmony export */   listDriveFiles: function() { return /* binding */ listDriveFiles; },\n/* harmony export */   loadGoogleApi: function() { return /* binding */ loadGoogleApi; },\n/* harmony export */   signInWithGoogle: function() { return /* binding */ signInWithGoogle; },\n/* harmony export */   signOutFromGoogle: function() { return /* binding */ signOutFromGoogle; }\n/* harmony export */ });\n// This is a simplified module for Google Drive integration\n// Type definitions for gapi and global window object\n// Load the Google API client library\nconst loadGoogleApi = ()=>{\n    return new Promise((resolve, reject)=>{\n        // Check if the API is already loaded\n        if (window.gapi && window.gapi.client && window.gapi.client.drive) {\n            console.log(\"Google API already loaded\");\n            resolve();\n            return;\n        }\n        const script = document.createElement(\"script\");\n        script.src = \"https://apis.google.com/js/api.js\";\n        script.onload = ()=>{\n            console.log(\"Google API script loaded\");\n            window.gapi.load(\"client:auth2\", ()=>{\n                console.log(\"Google client and auth2 libraries loaded\");\n                // Initialize the client with your credentials\n                window.gapi.client.init({\n                    apiKey: \"AIzaSyB-pZ0FV758VUs_pIZ0Ck2iq5Wx0FDJCxw\",\n                    clientId: \"913358736520-5biusol4f5ead6t86d7rv94rd0ar3gkn.apps.googleusercontent.com\",\n                    discoveryDocs: [\n                        \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"\n                    ],\n                    scope: \"https://www.googleapis.com/auth/drive.file https://www.googleapis.com/auth/drive.readonly\"\n                }).then(()=>{\n                    console.log(\"Google API client initialized successfully\");\n                    resolve();\n                }).catch((error)=>{\n                    console.error(\"Error initializing Google API client:\", {\n                        message: error.message,\n                        details: error,\n                        apiKey:  true ? \"Provided\" : 0,\n                        clientId:  true ? \"Provided\" : 0\n                    });\n                    reject(new Error(\"Failed to initialize Google API client: \".concat(error.message || \"Unknown error\")));\n                });\n            });\n        };\n        script.onerror = (error)=>{\n            console.error(\"Error loading Google API script:\", error);\n            reject(new Error(\"Failed to load Google API script\"));\n        };\n        document.body.appendChild(script);\n    });\n};\n// Check if user is authenticated with Google\nconst isGoogleAuthenticated = ()=>{\n    if (!window.gapi || !window.gapi.auth2) {\n        return false;\n    }\n    const authInstance = window.gapi.auth2.getAuthInstance();\n    return authInstance.isSignedIn.get();\n};\n// Sign in with Google\nconst signInWithGoogle = async ()=>{\n    if (!window.gapi || !window.gapi.auth2) {\n        throw new Error(\"Google API not loaded\");\n    }\n    const authInstance = window.gapi.auth2.getAuthInstance();\n    return await authInstance.signIn();\n};\n// Sign out from Google\nconst signOutFromGoogle = async ()=>{\n    if (!window.gapi || !window.gapi.auth2) {\n        throw new Error(\"Google API not loaded\");\n    }\n    const authInstance = window.gapi.auth2.getAuthInstance();\n    return await authInstance.signOut();\n};\n// List Google Drive files\nconst listDriveFiles = async function() {\n    let query = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n    return new Promise((resolve, reject)=>{\n        try {\n            // Check if Google API is properly loaded\n            if (!window.gapi || !window.gapi.client || !window.gapi.client.drive) {\n                throw new Error(\"Google Drive API not properly initialized\");\n            }\n            window.gapi.client.drive.files.list({\n                pageSize: 30,\n                fields: \"files(id, name, mimeType, modifiedTime)\",\n                q: query ? \"name contains '\".concat(query, \"' and trashed = false\") : \"trashed = false\",\n                orderBy: \"modifiedTime desc\"\n            }).then((response)=>{\n                resolve(response.result.files);\n            }).catch((error)=>{\n                console.error(\"Google Drive API error details:\", {\n                    message: error.message,\n                    status: error.status,\n                    result: error.result,\n                    stack: error.stack\n                });\n                reject(new Error(\"Google Drive API error: \".concat(error.message || \"Unknown error\")));\n            });\n        } catch (error) {\n            console.error(\"Google Drive operation error:\", error);\n            reject(new Error(\"Failed to list Google Drive files: \".concat(error.message || \"Unknown error\")));\n        }\n    });\n};\n// Get a Google Drive file\nconst getDriveFile = async (fileId)=>{\n    return new Promise((resolve, reject)=>{\n        window.gapi.client.drive.files.get({\n            fileId: fileId,\n            fields: \"id, name, mimeType, modifiedTime, webContentLink\"\n        }).then((response)=>{\n            resolve(response.result);\n        }).catch((error)=>{\n            reject(error);\n        });\n    });\n};\n// Download a Google Drive file\nconst downloadDriveFile = async (fileId)=>{\n    const response = await fetch(\"https://www.googleapis.com/drive/v3/files/\".concat(fileId, \"?alt=media\"), {\n        headers: {\n            Authorization: \"Bearer \".concat(window.gapi.auth.getToken().access_token)\n        }\n    });\n    if (!response.ok) {\n        throw new Error(\"Failed to download file\");\n    }\n    return await response.blob();\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q1YsR0FBR3hCLElBQUksQ0FBQyxDQUFDMkI7WUFDUGxELFFBQVFrRCxTQUFTQyxNQUFNO1FBQ3pCLEdBQUczQixLQUFLLENBQUMsQ0FBQ0M7WUFDUnhCLE9BQU93QjtRQUNUO0lBQ0Y7QUFDRixFQUFFO0FBRUYsK0JBQStCO0FBQ3hCLE1BQU0rQixvQkFBb0IsT0FBT0Q7SUFDdEMsTUFBTUwsV0FBVyxNQUFNTyxNQUNyQiw2Q0FBb0QsT0FBUEYsUUFBTyxlQUNwRDtRQUNFRyxTQUFTO1lBQ1BDLGVBQWUsVUFBbUQsT0FBekN6RCxPQUFPQyxJQUFJLENBQUN5RCxJQUFJLENBQUNDLFFBQVEsR0FBR0MsWUFBWTtRQUNuRTtJQUNGO0lBR0YsSUFBSSxDQUFDWixTQUFTYSxFQUFFLEVBQUU7UUFDaEIsTUFBTSxJQUFJbkMsTUFBTTtJQUNsQjtJQUVBLE9BQU8sTUFBTXNCLFNBQVNjLElBQUk7QUFDNUIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZ29vZ2xlRHJpdmUudHM/NTc1YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGlzIGEgc2ltcGxpZmllZCBtb2R1bGUgZm9yIEdvb2dsZSBEcml2ZSBpbnRlZ3JhdGlvblxuXG4vLyBUeXBlIGRlZmluaXRpb25zIGZvciBnYXBpIGFuZCBnbG9iYWwgd2luZG93IG9iamVjdFxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICBnYXBpOiBhbnk7XG4gIH1cbn1cblxuLy8gTG9hZCB0aGUgR29vZ2xlIEFQSSBjbGllbnQgbGlicmFyeVxuZXhwb3J0IGNvbnN0IGxvYWRHb29nbGVBcGkgPSAoKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZTx2b2lkPigocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgLy8gQ2hlY2sgaWYgdGhlIEFQSSBpcyBhbHJlYWR5IGxvYWRlZFxuICAgIGlmICh3aW5kb3cuZ2FwaSAmJiB3aW5kb3cuZ2FwaS5jbGllbnQgJiYgd2luZG93LmdhcGkuY2xpZW50LmRyaXZlKSB7XG4gICAgICBjb25zb2xlLmxvZygnR29vZ2xlIEFQSSBhbHJlYWR5IGxvYWRlZCcpO1xuICAgICAgcmVzb2x2ZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIHNjcmlwdC5zcmMgPSAnaHR0cHM6Ly9hcGlzLmdvb2dsZS5jb20vanMvYXBpLmpzJztcbiAgICBzY3JpcHQub25sb2FkID0gKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ0dvb2dsZSBBUEkgc2NyaXB0IGxvYWRlZCcpO1xuICAgICAgd2luZG93LmdhcGkubG9hZCgnY2xpZW50OmF1dGgyJywgKCkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZygnR29vZ2xlIGNsaWVudCBhbmQgYXV0aDIgbGlicmFyaWVzIGxvYWRlZCcpO1xuICAgICAgICBcbiAgICAgICAgLy8gSW5pdGlhbGl6ZSB0aGUgY2xpZW50IHdpdGggeW91ciBjcmVkZW50aWFsc1xuICAgICAgICB3aW5kb3cuZ2FwaS5jbGllbnQuaW5pdCh7XG4gICAgICAgICAgYXBpS2V5OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HT09HTEVfQVBJX0tFWSxcbiAgICAgICAgICBjbGllbnRJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfR09PR0xFX0NMSUVOVF9JRCxcbiAgICAgICAgICBkaXNjb3ZlcnlEb2NzOiBbJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2Rpc2NvdmVyeS92MS9hcGlzL2RyaXZlL3YzL3Jlc3QnXSxcbiAgICAgICAgICBzY29wZTogJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvZHJpdmUuZmlsZSBodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9hdXRoL2RyaXZlLnJlYWRvbmx5J1xuICAgICAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnR29vZ2xlIEFQSSBjbGllbnQgaW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Jyk7XG4gICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICB9KS5jYXRjaCgoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZyBHb29nbGUgQVBJIGNsaWVudDonLCB7XG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICAgICAgZGV0YWlsczogZXJyb3IsXG4gICAgICAgICAgICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0dPT0dMRV9BUElfS0VZID8gJ1Byb3ZpZGVkJyA6ICdNaXNzaW5nJyxcbiAgICAgICAgICAgIGNsaWVudElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19HT09HTEVfQ0xJRU5UX0lEID8gJ1Byb3ZpZGVkJyA6ICdNaXNzaW5nJ1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoYEZhaWxlZCB0byBpbml0aWFsaXplIEdvb2dsZSBBUEkgY2xpZW50OiAke2Vycm9yLm1lc3NhZ2UgfHwgJ1Vua25vd24gZXJyb3InfWApKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9O1xuICAgIHNjcmlwdC5vbmVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBsb2FkaW5nIEdvb2dsZSBBUEkgc2NyaXB0OicsIGVycm9yKTtcbiAgICAgIHJlamVjdChuZXcgRXJyb3IoJ0ZhaWxlZCB0byBsb2FkIEdvb2dsZSBBUEkgc2NyaXB0JykpO1xuICAgIH07XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICB9KTtcbn07XG5cbi8vIENoZWNrIGlmIHVzZXIgaXMgYXV0aGVudGljYXRlZCB3aXRoIEdvb2dsZVxuZXhwb3J0IGNvbnN0IGlzR29vZ2xlQXV0aGVudGljYXRlZCA9ICgpID0+IHtcbiAgaWYgKCF3aW5kb3cuZ2FwaSB8fCAhd2luZG93LmdhcGkuYXV0aDIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgXG4gIGNvbnN0IGF1dGhJbnN0YW5jZSA9IHdpbmRvdy5nYXBpLmF1dGgyLmdldEF1dGhJbnN0YW5jZSgpO1xuICByZXR1cm4gYXV0aEluc3RhbmNlLmlzU2lnbmVkSW4uZ2V0KCk7XG59O1xuXG4vLyBTaWduIGluIHdpdGggR29vZ2xlXG5leHBvcnQgY29uc3Qgc2lnbkluV2l0aEdvb2dsZSA9IGFzeW5jICgpID0+IHtcbiAgaWYgKCF3aW5kb3cuZ2FwaSB8fCAhd2luZG93LmdhcGkuYXV0aDIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0dvb2dsZSBBUEkgbm90IGxvYWRlZCcpO1xuICB9XG4gIFxuICBjb25zdCBhdXRoSW5zdGFuY2UgPSB3aW5kb3cuZ2FwaS5hdXRoMi5nZXRBdXRoSW5zdGFuY2UoKTtcbiAgcmV0dXJuIGF3YWl0IGF1dGhJbnN0YW5jZS5zaWduSW4oKTtcbn07XG5cbi8vIFNpZ24gb3V0IGZyb20gR29vZ2xlXG5leHBvcnQgY29uc3Qgc2lnbk91dEZyb21Hb29nbGUgPSBhc3luYyAoKSA9PiB7XG4gIGlmICghd2luZG93LmdhcGkgfHwgIXdpbmRvdy5nYXBpLmF1dGgyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdHb29nbGUgQVBJIG5vdCBsb2FkZWQnKTtcbiAgfVxuICBcbiAgY29uc3QgYXV0aEluc3RhbmNlID0gd2luZG93LmdhcGkuYXV0aDIuZ2V0QXV0aEluc3RhbmNlKCk7XG4gIHJldHVybiBhd2FpdCBhdXRoSW5zdGFuY2Uuc2lnbk91dCgpO1xufTtcblxuLy8gTGlzdCBHb29nbGUgRHJpdmUgZmlsZXNcbmV4cG9ydCBjb25zdCBsaXN0RHJpdmVGaWxlcyA9IGFzeW5jIChxdWVyeSA9ICcnKSA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIC8vIENoZWNrIGlmIEdvb2dsZSBBUEkgaXMgcHJvcGVybHkgbG9hZGVkXG4gICAgICBpZiAoIXdpbmRvdy5nYXBpIHx8ICF3aW5kb3cuZ2FwaS5jbGllbnQgfHwgIXdpbmRvdy5nYXBpLmNsaWVudC5kcml2ZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dvb2dsZSBEcml2ZSBBUEkgbm90IHByb3Blcmx5IGluaXRpYWxpemVkJyk7XG4gICAgICB9XG5cbiAgICAgIHdpbmRvdy5nYXBpLmNsaWVudC5kcml2ZS5maWxlcy5saXN0KHtcbiAgICAgICAgcGFnZVNpemU6IDMwLFxuICAgICAgICBmaWVsZHM6ICdmaWxlcyhpZCwgbmFtZSwgbWltZVR5cGUsIG1vZGlmaWVkVGltZSknLFxuICAgICAgICBxOiBxdWVyeSA/IGBuYW1lIGNvbnRhaW5zICcke3F1ZXJ5fScgYW5kIHRyYXNoZWQgPSBmYWxzZWAgOiAndHJhc2hlZCA9IGZhbHNlJyxcbiAgICAgICAgb3JkZXJCeTogJ21vZGlmaWVkVGltZSBkZXNjJ1xuICAgICAgfSkudGhlbigocmVzcG9uc2U6IGFueSkgPT4ge1xuICAgICAgICByZXNvbHZlKHJlc3BvbnNlLnJlc3VsdC5maWxlcyk7XG4gICAgICB9KS5jYXRjaCgoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdHb29nbGUgRHJpdmUgQVBJIGVycm9yIGRldGFpbHM6Jywge1xuICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgc3RhdHVzOiBlcnJvci5zdGF0dXMsXG4gICAgICAgICAgcmVzdWx0OiBlcnJvci5yZXN1bHQsXG4gICAgICAgICAgc3RhY2s6IGVycm9yLnN0YWNrXG4gICAgICAgIH0pO1xuICAgICAgICByZWplY3QobmV3IEVycm9yKGBHb29nbGUgRHJpdmUgQVBJIGVycm9yOiAke2Vycm9yLm1lc3NhZ2UgfHwgJ1Vua25vd24gZXJyb3InfWApKTtcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0dvb2dsZSBEcml2ZSBvcGVyYXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcihgRmFpbGVkIHRvIGxpc3QgR29vZ2xlIERyaXZlIGZpbGVzOiAke2Vycm9yLm1lc3NhZ2UgfHwgJ1Vua25vd24gZXJyb3InfWApKTtcbiAgICB9XG4gIH0pO1xufTtcblxuLy8gR2V0IGEgR29vZ2xlIERyaXZlIGZpbGVcbmV4cG9ydCBjb25zdCBnZXREcml2ZUZpbGUgPSBhc3luYyAoZmlsZUlkOiBzdHJpbmcpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICB3aW5kb3cuZ2FwaS5jbGllbnQuZHJpdmUuZmlsZXMuZ2V0KHtcbiAgICAgIGZpbGVJZDogZmlsZUlkLFxuICAgICAgZmllbGRzOiAnaWQsIG5hbWUsIG1pbWVUeXBlLCBtb2RpZmllZFRpbWUsIHdlYkNvbnRlbnRMaW5rJ1xuICAgIH0pLnRoZW4oKHJlc3BvbnNlOiBhbnkpID0+IHtcbiAgICAgIHJlc29sdmUocmVzcG9uc2UucmVzdWx0KTtcbiAgICB9KS5jYXRjaCgoZXJyb3I6IGFueSkgPT4ge1xuICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICB9KTtcbiAgfSk7XG59O1xuXG4vLyBEb3dubG9hZCBhIEdvb2dsZSBEcml2ZSBmaWxlXG5leHBvcnQgY29uc3QgZG93bmxvYWREcml2ZUZpbGUgPSBhc3luYyAoZmlsZUlkOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICBgaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vZHJpdmUvdjMvZmlsZXMvJHtmaWxlSWR9P2FsdD1tZWRpYWAsXG4gICAge1xuICAgICAgaGVhZGVyczoge1xuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7d2luZG93LmdhcGkuYXV0aC5nZXRUb2tlbigpLmFjY2Vzc190b2tlbn1gXG4gICAgICB9XG4gICAgfVxuICApO1xuICBcbiAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGRvd25sb2FkIGZpbGUnKTtcbiAgfVxuICBcbiAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmJsb2IoKTtcbn07ICJdLCJuYW1lcyI6WyJsb2FkR29vZ2xlQXBpIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJ3aW5kb3ciLCJnYXBpIiwiY2xpZW50IiwiZHJpdmUiLCJjb25zb2xlIiwibG9nIiwic2NyaXB0IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic3JjIiwib25sb2FkIiwibG9hZCIsImluaXQiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfR09PR0xFX0FQSV9LRVkiLCJjbGllbnRJZCIsIk5FWFRfUFVCTElDX0dPT0dMRV9DTElFTlRfSUQiLCJkaXNjb3ZlcnlEb2NzIiwic2NvcGUiLCJ0aGVuIiwiY2F0Y2giLCJlcnJvciIsIm1lc3NhZ2UiLCJkZXRhaWxzIiwiRXJyb3IiLCJvbmVycm9yIiwiYm9keSIsImFwcGVuZENoaWxkIiwiaXNHb29nbGVBdXRoZW50aWNhdGVkIiwiYXV0aDIiLCJhdXRoSW5zdGFuY2UiLCJnZXRBdXRoSW5zdGFuY2UiLCJpc1NpZ25lZEluIiwiZ2V0Iiwic2lnbkluV2l0aEdvb2dsZSIsInNpZ25JbiIsInNpZ25PdXRGcm9tR29vZ2xlIiwic2lnbk91dCIsImxpc3REcml2ZUZpbGVzIiwicXVlcnkiLCJmaWxlcyIsImxpc3QiLCJwYWdlU2l6ZSIsImZpZWxkcyIsInEiLCJvcmRlckJ5IiwicmVzcG9uc2UiLCJyZXN1bHQiLCJzdGF0dXMiLCJzdGFjayIsImdldERyaXZlRmlsZSIsImZpbGVJZCIsImRvd25sb2FkRHJpdmVGaWxlIiwiZmV0Y2giLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImF1dGgiLCJnZXRUb2tlbiIsImFjY2Vzc190b2tlbiIsIm9rIiwiYmxvYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/googleDrive.ts\n"));

/***/ })

});